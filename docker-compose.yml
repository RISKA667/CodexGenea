version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: garmea_postgres
    environment:
      POSTGRES_DB: garmea_db
      POSTGRES_USER: garmea_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - garmea_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U garmea_user -d garmea_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: garmea_redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-change_this_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - garmea_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  garmea-api:
    build: .
    container_name: garmea_api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://garmea_user:${DB_PASSWORD:-change_this_password}@postgres:5432/garmea_db
      - REDIS_URL=redis://:${REDIS_PASSWORD:-change_this_password}@redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=false
      - CORS_ORIGINS=https://yourdomain.com,http://localhost:3000
      - ALLOWED_HOSTS=yourdomain.com,localhost
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - garmea_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React (optionnel)
  garmea-frontend:
    build: ./garmea-frontend
    container_name: garmea_frontend
    depends_on:
      - garmea-api
    environment:
      - REACT_APP_API_URL=http://garmea-api:8000
    ports:
      - "3000:3000"
    networks:
      - garmea_network
    restart: unless-stopped

  # Proxy inverse Nginx
  nginx:
    image: nginx:alpine
    container_name: garmea_nginx
    depends_on:
      - garmea-api
      - garmea-frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    networks:
      - garmea_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  garmea_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16